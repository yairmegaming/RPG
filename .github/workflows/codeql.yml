# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL Advanced"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '27 20 * * 6'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: actions
          build-mode: none
        - language: csharp
          build-mode: manual
        # Add more languages as needed

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Install .NET SDK required by Unity (usually 2020.3+ uses .NET 4.x)
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'

    # Optionally, install mono if your Unity version requires it
    # - name: Install Mono
    #   run: sudo apt-get install -y mono-complete

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    # Install Unity (replace version as needed)
    - name: Setup Unity
      uses: game-ci/unity-installer@v3
      with:
        unityVersion: 2021.3.0f1

    # Generate .sln and .csproj files using Unity in batchmode
    - name: Generate project files
      run: |
        /opt/unity/Editor/Unity \
          -batchmode \
          -nographics \
          -quit \
          -projectPath . \
          -executeMethod UnityEditor.SyncVS.SyncSolution

    # Now restore and build as before
    - if: matrix.language == 'csharp' && matrix.build-mode == 'manual'
      name: Build Unity C# solution
      shell: bash
      run: |
        echo "Restoring NuGet packages for Unity solution..."
        dotnet restore YourProject.sln
        echo "Building Unity C# solution..."
        msbuild YourProject.sln /p:Configuration=Release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
    - name: List solution and project files
      run: |
        echo "Solution files:"
        find . -name "*.sln"
        echo "Project files:"
        find . -name "*.csproj"
